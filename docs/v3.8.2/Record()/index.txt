1:"$Sreact.fragment"
2:I[9287,[],""]
3:I[4235,[],""]
4:I[9534,["534","static/chunks/534-36991723363293d6.js","853","static/chunks/app/docs/%5Bversion%5D/page-1471691b270351d4.js"],""]
7:I[3621,[],"OutletBoundary"]
a:I[3621,[],"ViewportBoundary"]
c:I[3621,[],"MetadataBoundary"]
e:I[7890,[],""]
:HL["/_next/static/css/a4b7556e45b5277f.css","style"]
0:{"P":null,"b":"yCwv7RoYnRLv4jABeQ0JO","p":"","c":["","docs","v3.8.2","Record()",""],"i":false,"f":[[["",{"children":["docs",{"children":[["version","v3.8.2","d"],{"children":[["type","Record()","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a4b7556e45b5277f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"pageBody","children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L4",null,{"href":"/","children":"Return Home"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["version","v3.8.2","d"],["$","$1","c",{"children":[null,"$L5"]}],{"children":[["type","Record()","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6","$undefined",null,["$","$L7",null,{"children":["$L8","$L9",null]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","9-12GBxIxJ3ey-StQtUrO",{"children":[["$","$La",null,{"children":"$Lb"}],null]}],["$","$Lc",null,{"children":"$Ld"}]]}],false]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:I[4366,["534","static/chunks/534-36991723363293d6.js","479","static/chunks/479-9d174c784fc467f1.js","502","static/chunks/app/docs/%5Bversion%5D/layout-3765e0e31eea4221.js"],"ImmutableConsole"]
10:I[7776,["534","static/chunks/534-36991723363293d6.js","479","static/chunks/479-9d174c784fc467f1.js","502","static/chunks/app/docs/%5Bversion%5D/layout-3765e0e31eea4221.js"],"HeaderLogoLink"]
11:I[7776,["534","static/chunks/534-36991723363293d6.js","479","static/chunks/479-9d174c784fc467f1.js","502","static/chunks/app/docs/%5Bversion%5D/layout-3765e0e31eea4221.js"],"HeaderLinks"]
12:I[6231,["534","static/chunks/534-36991723363293d6.js","650","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-e70284a08a775376.js"],"TypeDocumentation"]
5:["$","div",null,{"children":[["$","$Lf",null,{"version":"v3.8.2"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L10",null,{}],["$","$L11",null,{"versions":["v4.0.0-rc.15","v3.8.2","latest@main"],"currentVersion":"v3.8.2"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]
13:T1924,<code class="codeBlock"><span class="token keyword">var</span> ABRecord <span class="token operator">=</span> <span class="token function">Record</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> myRecord <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ABRecord</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code><p>Records always have a value for the keys they define. <code>remove</code>ing a key
from a record simply resets it to the default value for that key.</p>
<code class="codeBlock">myRecord<span class="token punctuation">.</span>size <span class="token comment">// 2</span>
myRecord<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
myRecord<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
myRecordWithoutB <span class="token operator">=</span> myRecord<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span>
myRecordWithoutB<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
myRecordWithoutB<span class="token punctuation">.</span>size <span class="token comment">// 2</span></code><p>Values provided to the constructor not found in the Record type will
be ignored. For example, in this case, ABRecord is provided a key &quot;x&quot; even
though only &quot;a&quot; and &quot;b&quot; have been defined. The value for &quot;x&quot; will be
ignored for this record.</p>
<code class="codeBlock"><span class="token keyword">var</span> myRecord <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ABRecord</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
myRecord<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span></code><p>Because Records have a known set of string keys, property get access works
as expected, however property sets will throw an Error.</p>
<p>Note: IE8 does not support property access. Only use <code><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> when
supporting IE8.</p>
<code class="codeBlock">myRecord<span class="token punctuation">.</span>b <span class="token comment">// 3</span>
myRecord<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment">// throws Error</span></code><p>Record Classes can be extended as well, allowing for custom methods on your
Record. This is not a common pattern in functional environments, but is in
many JS programs.</p>
<p>Note: TypeScript does not support this type of subclassing.</p>
<code class="codeBlock"><span class="token keyword">class</span> <span class="token class-name">ABRecord</span> <span class="token keyword">extends</span> <span class="token class-name">Record</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">getAB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token var">this</span><span class="token punctuation">.</span>a <span class="token operator">+</span> <span class="token var">this</span><span class="token punctuation">.</span>b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> myRecord <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ABRecord</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
myRecord<span class="token punctuation">.</span><span class="token function">getAB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 4</span></code>6:["$","$L12",null,{"def":{"qualifiedName":"Record","doc":{"synopsis":"<p>Creates a new Class which produces Record instances. A record is similar to\na JS object, but enforce a specific set of allowed string keys, and have\ndefault values.</p>\n","description":"$13","notes":[]},"call":{"name":"Record","label":"Record()","id":"Record()","signatures":[{"line":1142,"params":[{"name":"defaultValues","type":{"k":8,"members":[{"index":true,"params":[{"name":"key","type":{"k":7}}],"type":{"k":1}}]}},{"name":"name","type":{"k":7},"optional":true}],"type":{"k":12,"name":"Record.Class","url":"/docs/v3.8.2/Record.Class"}}],"url":"/docs/v3.8.2/Record()"},"label":"Record()","url":"/docs/v3.8.2/Record()"},"sidebarLinks":[{"label":"fromJS()","url":"/docs/v3.8.2/fromJS()"},{"label":"is()","url":"/docs/v3.8.2/is()"},{"label":"List","url":"/docs/v3.8.2/List"},{"label":"Map","url":"/docs/v3.8.2/Map"},{"label":"OrderedMap","url":"/docs/v3.8.2/OrderedMap"},{"label":"Set","url":"/docs/v3.8.2/Set"},{"label":"OrderedSet","url":"/docs/v3.8.2/OrderedSet"},{"label":"Stack","url":"/docs/v3.8.2/Stack"},{"label":"Range()","url":"/docs/v3.8.2/Range()"},{"label":"Repeat()","url":"/docs/v3.8.2/Repeat()"},{"label":"Record()","url":"/docs/v3.8.2/Record()"},{"label":"Record.Class","url":"/docs/v3.8.2/Record.Class"},{"label":"Seq","url":"/docs/v3.8.2/Seq"},{"label":"Seq.Keyed","url":"/docs/v3.8.2/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v3.8.2/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v3.8.2/Seq.Set"},{"label":"Iterable","url":"/docs/v3.8.2/Iterable"},{"label":"Iterable.Keyed","url":"/docs/v3.8.2/Iterable.Keyed"},{"label":"Iterable.Indexed","url":"/docs/v3.8.2/Iterable.Indexed"},{"label":"Iterable.Set","url":"/docs/v3.8.2/Iterable.Set"},{"label":"Collection","url":"/docs/v3.8.2/Collection"},{"label":"Collection.Keyed","url":"/docs/v3.8.2/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v3.8.2/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v3.8.2/Collection.Set"}]}]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:null
9:null
d:[["$","title","0",{"children":"Record — Immutable.js"}],["$","link","1",{"rel":"icon","href":"/favicon.png"}]]
